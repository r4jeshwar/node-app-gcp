# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production
    # env:
    #   IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    #Install kubectl
    - name: Install Kubectl
      uses: azure/setup-kubectl@v3   
      with:
        version: 'v1.21.3' 
      id: install
    
    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0
      with:
        version: '270.0.0'
        service_account_key: ${{ secrets.GCP_CREDENTIALS }}
        service_account_email: ${{ secrets.GCP_EMAIL }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    # Build and push the image to GCR
    - name: Push the image to GCR
      run: |
        gcloud auth configure-docker
        docker build -t ${{ secrets.IMAGE_NAME }} .
        docker images
    #     docker tag $IMAGE_NAME gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCR_REPO_NAME }}
    #     docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCR_REPO_NAME }}
    
    # # Change the docker image
    # - name: Modify the deployment.yml file
    #   env:
    #     REPOSITORY: node
    #     IMAGE_TAG: $(echo ${{ github.sha }} | head -c 8)
    #   run: |
    #     DOCKER=node:${{ env.IMAGE_TAG }}  
    #     sed -i 's@CONTAINER_IMAGE@'"$DOCKER"'@' deployment.yml
    
    # # Deploy the application in GKE
    # - name: Deploy the application
    #   uses: tale/kubectl-action@v1
    #   with:
    #     base64-kube-config: ${{ secrets.KUB_CONFIG }}
    # - run: |
    #     kubectl get node    
    #     kubectl apply -f deployment.yml
    #     kubectl get pods
    #     kubectl get svc