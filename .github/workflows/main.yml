# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v3

#       # Runs a single command using the runners shell
#       - name: Install kubectl
#         uses: Azure/setup-kubectl@v3
#         with:
#           version: 'v1.21.3' 
#         id: kubectl

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production
    env:
      IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Kubectl
      uses: azure/setup-kubectl@v3   
      with:
        version: 'v1.21.3' 
      id: install
    
    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0
      with:
        version: '270.0.0'
        service_account_key: ${{ secrets.GCP_CREDENTIALS }}
        service_account_email: ${{ secrets.GCP_EMAIL }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: 
      run: |
        gcloud auth configure-docker
        docker build -t $IMAGE_NAME .
        docker tag $IMAGE_NAME gcr.io/${{ secrets.GCP_PROJECT_ID }}/node
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/node

    - name:
      env:
        REPOSITORY: node 
        IMAGE_TAG: $(echo ${{ github.sha }} | head -c 8)
      run: |
        DOCKER=node:${{ env.IMAGE_TAG }}
        sed -i 's@CONTAINER_IMAGE@'"$DOCKER"'@' deployment.yml

    - name:
      uses: tale/kubectl-action@v1
      with:
        base64-kube-config: ${{ secrets.KUBE_CONFIG }}
    - run: |
        kubectl get node    
        kubectl apply -f deployment.yml  